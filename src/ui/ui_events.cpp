// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: CYD_SD_BREAKOUT_DEMO

#include "ui.h"
#include "settings.h"
#include <Arduino.h>

struct NIBBLE
{
	bool G18: 1;
	bool G19: 1;
	bool G23: 1;
	bool G5:  1;
};

NIBBLE LEDState;

void ClearLEDState(lv_event_t *e)
{
	LEDState.G18 = LED_OFF;
	LEDState.G19 = LED_OFF;
	LEDState.G23 = LED_OFF;
	LEDState.G5  = LED_OFF;
}

void FunctionToggleGPIO18(lv_event_t *e)
{
	lv_obj_t *obj = lv_event_get_target(e);
	bool newState = lv_obj_has_state(obj, LV_STATE_CHECKED);
	LEDState.G18 = newState ? LED_ON : LED_OFF;
	digitalWrite(GPIO18, newState ? LED_ON : LED_OFF);
	lv_obj_set_style_bg_opa(obj, (newState ? 255 : 128), LV_PART_KNOB | LV_STATE_DEFAULT);
#ifdef AddSerialOutput
	Serial.println("Toggle GPIO18");
#endif
}

void FunctionToggleGPIO19(lv_event_t *e)
{
	lv_obj_t *obj = lv_event_get_target(e);
	bool newState = lv_obj_has_state(obj, LV_STATE_CHECKED);
	LEDState.G19 = newState ? LED_ON : LED_OFF;
	digitalWrite(GPIO19, newState ? LED_ON : LED_OFF);
	lv_obj_set_style_bg_opa(obj, (newState ? 255 : 128), LV_PART_KNOB | LV_STATE_DEFAULT);
#ifdef AddSerialOutput
	Serial.println("Toggle GPIO19");
#endif
}

void FunctionToggleGPIO23(lv_event_t *e)
{
	lv_obj_t *obj = lv_event_get_target(e);
	bool newState = lv_obj_has_state(obj, LV_STATE_CHECKED);
	LEDState.G23 = newState ? LED_ON : LED_OFF;
	digitalWrite(GPIO23, newState ? LED_ON : LED_OFF);
	lv_obj_set_style_bg_opa(obj, (newState ? 255 : 128), LV_PART_KNOB | LV_STATE_DEFAULT);
#ifdef AddSerialOutput
	Serial.println("Toggle GPIO23");
#endif
}

void FunctionToggleGPIO5(lv_event_t *e)
{
	lv_obj_t *obj = lv_event_get_target(e);
	bool newState = lv_obj_has_state(obj, LV_STATE_CHECKED);
	LEDState.G5 = newState ? LED_ON : LED_OFF;
	digitalWrite(GPIO5, newState ? LED_ON : LED_OFF);
	lv_obj_set_style_bg_opa(obj, (newState ? 255 : 128), LV_PART_KNOB | LV_STATE_DEFAULT);
#ifdef AddSerialOutput
	Serial.println("Toggle GPIO5");
#endif
}

void ReturnClickedRestoreStates(lv_event_t * e)
{
	digitalWrite(GPIO18,LEDState.G18);
	digitalWrite(GPIO19,LEDState.G19);
	digitalWrite(GPIO23,LEDState.G23);
	digitalWrite(GPIO5,LEDState.G5);
}
